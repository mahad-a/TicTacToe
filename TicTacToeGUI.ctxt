#BlueJ class context
comment0.target=TicTacToeGUI
comment0.text=\r\n\ A\ class\ modelling\ a\ tic-tac-toe\ (noughts\ and\ crosses,\ Xs\ and\ Os)\ game\ in\ a\r\n\ GUI\ window.\ \r\n\r\n\ @author\ Mahad\ Ahmed\ 101220427\r\n\ @version\ April\ 08,\ 2023\r\n
comment1.params=
comment1.target=TicTacToeGUI()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ TicTacToeGUI\r\n
comment10.params=e
comment10.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment10.text=\ \r\n\ This\ action\ listener\ is\ called\ when\ the\ user\ clicks\ on\ \r\n\ any\ of\ the\ GUI's\ buttons.\ \r\n
comment11.params=e
comment11.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment11.text=\r\n\ Detects\ when\ the\ mouse\ enters\ the\ component.\ \ We\ are\ only\ "listening"\ to\ the\r\n\ JMenu.\ \ We\ highlight\ the\ menu\ name\ when\ the\ mouse\ goes\ into\ that\ component.\r\n\ \r\n\ @param\ e\ The\ mouse\ event\ triggered\ when\ the\ mouse\ was\ moved\ into\ the\ component\r\n
comment12.params=e
comment12.target=void\ mouseExited(java.awt.event.MouseEvent)
comment12.text=\r\n\ Detects\ when\ the\ mouse\ exits\ the\ component.\ \ We\ are\ only\ "listening"\ to\ the\r\n\ JMenu.\ \ We\ stop\ highlighting\ the\ menu\ name\ when\ the\ mouse\ exits\ \ that\ component.\r\n\ \r\n\ @param\ e\ The\ mouse\ event\ triggered\ when\ the\ mouse\ was\ moved\ out\ of\ the\ component\r\n
comment2.params=event
comment2.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment3.params=
comment3.target=void\ clearBoard()
comment3.text=\r\n\ Sets\ everything\ up\ for\ a\ new\ game.\ \ Marks\ all\ squares\ in\ the\ Tic\ Tac\ Toe\ board\ as\ empty,\r\n\ and\ indicates\ no\ winner\ yet,\ 9\ free\ squares\ and\ the\ current\ player\ is\ player\ X.\r\n
comment4.params=
comment4.target=void\ playGame()
comment4.text=\r\n\ Plays\ one\ game\ of\ Tic\ Tac\ Toe.\r\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\r\n\ Returns\ a\ string\ representing\ the\ current\ state\ of\ the\ game.\ This\ should\r\n\ look\ like\ a\ regular\ tic\ tac\ toe\ board,\ and\ be\ followed\ by\ a\ message\ if\ \r\n\ the\ game\ is\ over\ that\ says\ who\ won\ (or\ indicates\ a\ tie).\r\n\r\n\ @return\ String\ representing\ the\ tic\ tac\ toe\ game\ state\ \r\n
comment6.params=
comment6.target=void\ print()
comment6.text=\r\n\ Prints\ the\ board\ to\ standard\ out\ using\ toString().\r\n
comment7.params=row\ col
comment7.target=boolean\ haveWinner(int,\ int)
comment7.text=\r\n\ Returns\ true\ if\ filling\ the\ given\ square\ gives\ us\ a\ winner,\ and\ false\r\n\ otherwise.\r\n\r\n\ @param\ int\ row\ of\ square\ just\ set\r\n\ @param\ int\ col\ of\ square\ just\ set\r\n\ \r\n\ @return\ true\ if\ we\ have\ a\ winner,\ false\ otherwise\r\n
comment8.params=i\ j
comment8.target=void\ gameDone(int,\ int)
comment8.text=\r\n\ Check\ if\ the\ game\ is\ done\ by\ checking\ if\ there\ is\ a\ winner.\ \r\n\ If\ winner\ is\ present,\ update\ the\ progress\ bar\ at\ the\ bottom\ of\r\n\ the\ GUI\ and\ make\ sure\ it\ is\ uneditable.\ Update\ the\ scoreboard\ \r\n\ with\ the\ result\ (whether\ X\ or\ O\ won\ or\ if\ there\ was\ a\ tie).\r\n\ \r\n\ @param\ i\ the\ integer\ value\ of\ the\ row\r\n\ @param\ j\ the\ integer\ value\ of\ the\ column\r\n
comment9.params=
comment9.target=void\ updatePlayer()
comment9.text=\r\n\ Update\ the\ player\ depending\ on\ who's\ turn\ it\ is.\r\n
numComments=13
